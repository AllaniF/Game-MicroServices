openapi: 3.0.1
info:
  title: Game API
  description: API documentation for the game backend services.
  version: 1.0.0
servers:
  - url: http://localhost:8000
    description: Server for Frontend service
  - url: http://localhost:8001/game-state/
    description: Server for Game State service
  - url: http://localhost:8002/entity/
    description: Server for Entity service
  - url: http://localhost:8003/fight/
    description: Server for Fight service
  - url: http://localhost:8004/map/
    description: Server for Map service
paths:
  /fight/calculate:
    post:
      summary: Perform fight calculations
      tags:
        - Fight
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                heroId:
                  type: integer
                currentHP:
                  type: number
                atk:
                  type: number
              required:
                - heroId
      responses:
        200:
          description: Fight calculation result
          content:
            application/json:
              schema:
                type: object
                properties:
                  heroID:
                    type: integer
                  heroRemainingHP:
                    type: integer
                  enemyRemainingHP:
                    type: integer
                  result:
                    type: string
                    enum:
                      - "win"
                      - "lose"
                  enemy:
                    type: object
                    properties:
                      name:
                        type: string
                      maxHP:
                        type: integer
                      atk:
                        type: integer
                  battleLog:
                    type: string

  /entity/heroes:
    get:
      summary: Get a list of heroes
      tags:
        - Entity
      responses:
        200:
          description: List of heroes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    type:
                      type: string
                    level:
                      type: integer
                    dunjonNb:
                      type: integer
                    id:
                      type: integer
                    maxHP:
                      type: integer
                    gold:
                      type: number
                    atk:
                      type: number

    post:
      summary: Create a new hero
      tags:
        - Entity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        201:
          description: Hero created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string

  /entity/enemy:
    get:
      summary: Get a list of enemies
      tags:
        - Entity
      responses:
        200:
          description: List of enemies
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    type:
                      type: string
                    level:
                      type: integer
                    dunjonNb:
                      type: integer
                    id:
                      type: integer
                    maxHP:
                      type: integer
                    gold:
                      type: number
                    atk:
                      type: number

  /game-state/selected-hero:
    post:
      summary: Store the selected hero
      tags:
        - Game State
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                level:
                  type: integer
                dunjonNb:
                  type: integer
                id:
                  type: integer
                maxHP:
                  type: integer
                gold:
                  type: number
                atk:
                  type: number
      responses:
        200:
          description: Stored selected hero
          content:
            text/plain:
              schema:
                type: string
                example: Hero saved successfully!

  /game-state/map:
    post:
      summary: Store the selected map
      tags:
        - Game State
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                matrix:
                  type: array
                  items:
                    type: array
                    items:
                      type: string
      responses:
        200:
          description: Stored selected map
          content:
            text/plain:
              schema:
                type: string
                example: Game map saved successfully!

  /game-state/next-position:
    post:
      summary: Calculate the next position
      tags:
        - Game State
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                direction:
                  type: string
                  enum:
                    - "up"
                    - "down"
                    - "left"
                    - "right"
              required:
                - direction
      responses:
        200:
          description: Next position calculated
          content:
            application/json:
              schema:
                type: object
                properties:
                  nextPosition:
                    type: object
                    properties:
                      x:
                        type: number
                      y:
                        type: number
                  isFighting:
                    type: boolean
                  isFinished:
                    type: boolean
                  currentHP:
                    type: number
                  ATK:
                    type: number

  /game-state/combat-results:
    post:
      summary: Store the remaining HP
      tags:
        - Game State
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                remainingHp:
                  type: number
              required:
                - remainingHp
      responses:
        200:
          description: Stored remaining HP
          content:
            application/json:
              schema:
                type: string
                example: Hero HP updated successfully!


  /game-state/upgrade-hero:
    post:
      summary: Send the new stats for hero
      tags:
        - Game State
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                upgrade:
                  type: string
                  enum:
                    - "hp"
                    - "atk"
              required:
                - upgrade
      responses:
        200:
          description: new stats for hero
          content:
            application/json:
              schema:
                type: string
                example: New stats for hero updated successfully!

  /logs:
    post:
      summary: Save log information
      tags:
        - Logs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                logId:
                  type: integer
                message:
                  type: string
                timestamp:
                  type: string
              required:
                - logId
                - message
                - timestamp
      responses:
        200:
          description: Log saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /map:
    get:
      summary: Get a random map
      tags:
        - Map
      responses:
        200:
          description: Random map selected
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  matrix:
                    type: array
                    items:
                      type: array
                      items:
                        type: string